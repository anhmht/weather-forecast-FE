"use strict";(self.webpackChunkdev=self.webpackChunkdev||[]).push([[9466],{29466:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "X": () => (/* binding */ SocialServices)\n});\n\n// EXTERNAL MODULE: ./src/service/generic-service/generic.service.ts\nvar generic_service = __webpack_require__(48449);\n;// CONCATENATED MODULE: ./src/constant/uri/social-constant.ts\n/* harmony default export */ const social_constant = ({\r\n    createPost: "/api/Post",\r\n    editPost: "/api/Post",\r\n    createComment: "/api/Post/create-comment",\r\n    approvePost: "/api/Post/approve-post/:id",\r\n    approveComment: "/api/Post/approve-comment/:id",\r\n    changePostStatus: "/api/Post/change-post-status/:id",\r\n    changeCommentStatus: "/api/Post/change-comment-status/:id",\r\n    updateComment: "/api/Post/update-comment",\r\n    addReactionToPost: "/api/Post/add-post-action-icon",\r\n    addReactionToComment: "/api/Post/add-comment-action-icon",\r\n    removeReactionFromPost: "/api/Post/remove-post-action-icon/:id",\r\n    removeReactionFromComment: "/api/Post/remove-comment-action-icon/:id",\r\n    sharePost: "/api/Post/share",\r\n    getListPosts: "/api/Post/get-list",\r\n    getListPostsUser: "/api/Post/get-list-user-time-line",\r\n    getPostById: "/api/Post/:id",\r\n    deletePost: "/api/Post/:id",\r\n    deleteComment: "/api/Post/comment/:id",\r\n    getListCommentsAdmin: "/api/Post/get-list-comment",\r\n    getListCommentsUser: "/api/Post/get-list-comment-of-user",\r\n});\r\n\n;// CONCATENATED MODULE: ./src/service/social-service/social.service.ts\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== "function" && b !== null)\r\n            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n\r\n\r\nvar SocialServices = /** @class */ (function (_super) {\r\n    __extends(SocialServices, _super);\r\n    function SocialServices() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    SocialServices.prototype.createPost = function (post) {\r\n        return this.executeSelectingPost(post, social_constant.createPost).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.editPost = function (post) {\r\n        return this.executeSelectingPut(post, social_constant.editPost).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.createComment = function (comment) {\r\n        return this.executeSelectingPost(comment, social_constant.createComment).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.approvePost = function (id) {\r\n        var uri = social_constant.approvePost.replace(":id", id);\r\n        return this.executeSelectingPut(null, uri).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.approveComment = function (id) {\r\n        var uri = social_constant.approveComment.replace(":id", id);\r\n        return this.executeSelectingPut(null, uri).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.changePostStatus = function (id, statusId) {\r\n        var uri = social_constant.changePostStatus.replace(":id", id + "&statusId=" + statusId);\r\n        return this.executeSelectingPut(null, uri).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.changeCommentStatus = function (id, statusId) {\r\n        var uri = social_constant.changeCommentStatus.replace(":id", id + "&statusId=" + statusId);\r\n        return this.executeSelectingPut(null, uri).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.updateComment = function (comment) {\r\n        return this.executeSelectingPut(comment, social_constant.updateComment).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.addReactionToPost = function (id, iconId) {\r\n        return this.executeSelectingPost({ id: id, iconId: iconId }, social_constant.addReactionToPost).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.addReactionToComment = function (id, iconId) {\r\n        return this.executeSelectingPost({ id: id, iconId: iconId }, social_constant.addReactionToComment).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.removeReactionFromPost = function (id) {\r\n        var uri = social_constant.removeReactionFromPost.replace(":id", id);\r\n        return this.executeDeletingWith(id, uri).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.removeReactionFromComment = function (id) {\r\n        var uri = social_constant.removeReactionFromComment.replace(":id", id);\r\n        return this.executeDeletingWith(id, uri).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.sharePost = function (id, shareTo) {\r\n        return this.executeSelectingPost({ id: id, shareTo: shareTo }, social_constant.sharePost).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.getListPosts = function (limit, page, commentLimit) {\r\n        return this.executeSelectingPost({ limit: limit, page: page, commentLimit: commentLimit }, social_constant.getListPosts).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.getListPostsUser = function (limit, page, commentLimit) {\r\n        return this.executeSelectingPost({ limit: limit, page: page, commentLimit: commentLimit }, social_constant.getListPostsUser).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.getPostById = function (id) {\r\n        var uri = social_constant.getPostById.replace(":id", id);\r\n        return this.executeSelecting(null, uri).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.deletePost = function (id) {\r\n        var uri = social_constant.deletePost.replace(":id", id);\r\n        return this.executeDeletingWith(id, uri).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.deleteComment = function (id) {\r\n        var uri = social_constant.deleteComment.replace(":id", id);\r\n        return this.executeDeletingWith(id, uri).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.getListCommentsAdmin = function (limit, page, postId) {\r\n        return this.executeSelectingPost({ limit: limit, page: page, postId: postId }, social_constant.getListCommentsAdmin).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    SocialServices.prototype.getListCommentsUser = function (limit, page) {\r\n        return this.executeSelectingPost({ limit: limit, page: page }, social_constant.getListCommentsUser).then(function (response) {\r\n            return response.isSuccess ? Promise.resolve(response.data) : Promise.reject(response.message);\r\n        }).catch(function (error) { return Promise.reject(error); });\r\n    };\r\n    return SocialServices;\r\n}(generic_service/* GenericServices */.d));\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///29466\n')}}]);