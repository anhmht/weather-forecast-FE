(self.webpackChunktemp=self.webpackChunktemp||[]).push([[1166],{1166:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"i\": () => (/* binding */ DataHelper)\n/* harmony export */ });\n/* harmony import */ var _constant_common_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77081);\n\r\nvar DataHelper = /** @class */ (function () {\r\n    function DataHelper() {\r\n    }\r\n    DataHelper.deepClone = function (source) {\r\n        if (source === undefined)\r\n            return undefined;\r\n        var json = JSON.stringify(source);\r\n        return JSON.parse(json);\r\n    };\r\n    DataHelper.getMinMaxTemp = function (temp, forecastDateApplyWithCurrent) {\r\n        if (forecastDateApplyWithCurrent === void 0) { forecastDateApplyWithCurrent = 0; }\r\n        var hours = Object.keys(temp).filter(function (x) { return x.includes('_'); });\r\n        var tempValue = [];\r\n        var limitDate = (forecastDateApplyWithCurrent * 24) + 24;\r\n        for (var index = forecastDateApplyWithCurrent * 24; index < limitDate; index++) {\r\n            tempValue.push(temp[hours[index]]);\r\n        }\r\n        return {\r\n            min: Math.min.apply(Math, tempValue),\r\n            max: Math.max.apply(Math, tempValue),\r\n        };\r\n    };\r\n    DataHelper.getTempByHour = function (temp, offset) {\r\n        var hours = Object.keys(temp).filter(function (x) { return x.includes('_'); });\r\n        var refDate = Object.keys(temp).filter(function (x) { return x.includes('refDate'); });\r\n        var refHour = new Date(temp[refDate[0]]).getHours();\r\n        var refDay = new Date(temp[refDate[0]]).getDate();\r\n        var currentHour = new Date().getHours();\r\n        var currentDay = new Date().getDate();\r\n        if (currentDay > refDay) {\r\n            currentHour = currentHour + 24 * (currentDay - refDay);\r\n        }\r\n        return temp[hours[currentHour - refHour + offset - 1]];\r\n    };\r\n    DataHelper.getTempByDateHour = function (temp, date, time) {\r\n        var hours = Object.keys(temp).filter(function (x) { return x.includes('_'); });\r\n        var refDate = Object.keys(temp).filter(function (x) { return x.includes('refDate'); });\r\n        var refHour = new Date(temp[refDate[0]]).getHours();\r\n        return temp[hours[(date * 24) + time - refHour - 1]];\r\n    };\r\n    DataHelper.getDisplayHour = function (offset) {\r\n        var displayHour = new Date().getHours() + offset;\r\n        if (displayHour > 23) {\r\n            return displayHour - 24 + ':00';\r\n        }\r\n        return displayHour + ':00';\r\n    };\r\n    DataHelper.getImageArray = function (htmlStr) {\r\n        var node = document.createElement('div');\r\n        node.innerHTML = htmlStr;\r\n        var nodeList = node.querySelectorAll('img');\r\n        var result = [];\r\n        nodeList.forEach(function (el) {\r\n            result.push(el.src);\r\n        });\r\n        return result.filter(function (x) { return x.includes(_constant_common_constant__WEBPACK_IMPORTED_MODULE_0__/* .BASE_CLOUD_URL */ .W1); });\r\n    };\r\n    DataHelper.generateInsertAndDeleteArr = function (entity, original) {\r\n        var originalArr = this.getImageArray(original);\r\n        var entityArr = this.getImageArray(entity);\r\n        var imageNormalDelete = [];\r\n        var imageNormalAdd = [];\r\n        originalArr.forEach(function (element) {\r\n            var img = entityArr.find(function (x) { return x === element; });\r\n            if (!img) {\r\n                imageNormalDelete.push(element);\r\n            }\r\n        });\r\n        entityArr.forEach(function (element) {\r\n            var img = originalArr.find(function (x) { return x === element; });\r\n            if (!img) {\r\n                imageNormalAdd.push(element);\r\n            }\r\n        });\r\n        return { imageNormalDelete: imageNormalDelete, imageNormalAdd: imageNormalAdd };\r\n    };\r\n    return DataHelper;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1166\n")}}]);