(self.webpackChunktemp=self.webpackChunktemp||[]).push([[1166],{1166:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"i\": () => (/* binding */ DataHelper)\n/* harmony export */ });\n/* harmony import */ var _constant_common_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(77081);\n/* harmony import */ var _constant_forcast_station_constant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(82102);\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30381);\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_2__);\n\r\n\r\n\r\nvar DataHelper = /** @class */ (function () {\r\n    function DataHelper() {\r\n    }\r\n    DataHelper.deepClone = function (source) {\r\n        if (source === undefined)\r\n            return undefined;\r\n        var json = JSON.stringify(source);\r\n        return JSON.parse(json);\r\n    };\r\n    DataHelper.insertAndShift = function (arr, from, to) {\r\n        var cutOut = arr.splice(from, 1)[0]; // cut the element at index 'from'\r\n        arr.splice(to, 0, cutOut); // insert it at index 'to'\r\n    };\r\n    DataHelper.getMinMaxTemp = function (temp, forecastDateApplyWithCurrent) {\r\n        if (forecastDateApplyWithCurrent === void 0) { forecastDateApplyWithCurrent = 0; }\r\n        var hours = Object.keys(temp).filter(function (x) { return x.includes('_'); });\r\n        var tempValue = [];\r\n        var limitDate = (forecastDateApplyWithCurrent * 24) + 24;\r\n        for (var index = forecastDateApplyWithCurrent * 24; index < limitDate; index++) {\r\n            tempValue.push(temp[hours[index]]);\r\n        }\r\n        return {\r\n            min: Math.min.apply(Math, tempValue),\r\n            max: Math.max.apply(Math, tempValue),\r\n        };\r\n    };\r\n    DataHelper.getDataByHour = function (temp, offset) {\r\n        var hours = Object.keys(temp).filter(function (x) { return x.includes('_'); });\r\n        var refDate = Object.keys(temp).filter(function (x) { return x.includes('refDate'); });\r\n        var diffHours = moment__WEBPACK_IMPORTED_MODULE_2___default()().add(offset, 'hours').diff(moment__WEBPACK_IMPORTED_MODULE_2___default()(temp[refDate[0]]), 'hours');\r\n        var result = diffHours;\r\n        return temp[hours[result]];\r\n    };\r\n    DataHelper.getMostFrequentIcon = function (temp, date) {\r\n        var originalHour = new Date().getHours();\r\n        var currentHour = originalHour;\r\n        var arr = new Array();\r\n        // Get most frequent icon at daylight from 6:00 to 18:00 for next 5 day\r\n        if (currentHour >= 6 && currentHour <= 18) {\r\n            if (date != 0) {\r\n                currentHour = 6;\r\n            }\r\n            for (var i = currentHour; i <= 18; i++) {\r\n                arr.push(DataHelper.getDataByDateHour(temp, date, i));\r\n            }\r\n        }\r\n        // Get most frequent icon at night from 19:00 to 5:00 next day for next 5 day\r\n        else {\r\n            if (date == 0) {\r\n                if (currentHour >= 0 && currentHour <= 5) {\r\n                    currentHour = currentHour + 24;\r\n                }\r\n            }\r\n            else {\r\n                currentHour = 19;\r\n            }\r\n            for (var i = currentHour; i <= 5 + 24; i++) {\r\n                if (i <= 23) {\r\n                    if (originalHour > 5) {\r\n                        arr.push(DataHelper.getDataByDateHour(temp, date, i));\r\n                    }\r\n                    else {\r\n                        arr.push(DataHelper.getDataByDateHour(temp, date - 1, i));\r\n                    }\r\n                }\r\n                else {\r\n                    if (originalHour > 5) {\r\n                        arr.push(DataHelper.getDataByDateHour(temp, date + 1, i - 24));\r\n                    }\r\n                    else {\r\n                        arr.push(DataHelper.getDataByDateHour(temp, date, i - 24));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var hashmap = arr.reduce(function (acc, val) {\r\n            acc[val] = (acc[val] || 0) + 1;\r\n            return acc;\r\n        }, {});\r\n        return Object.keys(hashmap).reduce(function (a, b) { return hashmap[a] > hashmap[b] ? a : b; });\r\n    };\r\n    DataHelper.getMostFrequent = function (temp, weatherType) {\r\n        var currentHour = new Date().getHours();\r\n        var arr = new Array();\r\n        if (weatherType === _constant_forcast_station_constant__WEBPACK_IMPORTED_MODULE_1__/* .WEATHER_TYPE.WindDirection */ .Xg.WindDirection) {\r\n            temp.forEach(function (element) {\r\n                arr.push(element.value);\r\n            });\r\n        }\r\n        else if (weatherType === _constant_forcast_station_constant__WEBPACK_IMPORTED_MODULE_1__/* .WEATHER_TYPE.Weather */ .Xg.Weather) {\r\n            if (currentHour >= 6 && currentHour <= 18) {\r\n                for (var i = 6; i <= 18; i++) {\r\n                    if (!temp[i]) {\r\n                        break;\r\n                    }\r\n                    arr.push(temp[i].value);\r\n                }\r\n            }\r\n            else {\r\n                for (var i = 0; i < 24; i++) {\r\n                    if (i < 6 || i > 18) {\r\n                        if (!temp[i]) {\r\n                            break;\r\n                        }\r\n                        arr.push(temp[i].value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var hashmap = arr.reduce(function (acc, val) {\r\n            acc[val] = (acc[val] || 0) + 1;\r\n            return acc;\r\n        }, {});\r\n        return Object.keys(hashmap).reduce(function (a, b) { return hashmap[a] > hashmap[b] ? a : b; });\r\n    };\r\n    DataHelper.getMostFrequentByHorizontal = function (temp) {\r\n        var arr = [];\r\n        temp.forEach(function (element) {\r\n            arr.push(element);\r\n        });\r\n        var hashmap = arr.reduce(function (acc, val) {\r\n            acc[val] = (acc[val] || 0) + 1;\r\n            return acc;\r\n        }, {});\r\n        return Object.keys(hashmap).reduce(function (a, b) { return hashmap[a] > hashmap[b] ? a : b; });\r\n    };\r\n    DataHelper.getDataByDateHour = function (temp, date, time) {\r\n        var hours = Object.keys(temp).filter(function (x) { return x.includes('_'); });\r\n        var refDate = Object.keys(temp).filter(function (x) { return x.includes('refDate'); });\r\n        var diffHours = moment__WEBPACK_IMPORTED_MODULE_2___default()().add(date, 'days').hours(time).diff(moment__WEBPACK_IMPORTED_MODULE_2___default()(temp[refDate[0]]), 'hours');\r\n        var result = diffHours > 0 ? diffHours : 1;\r\n        return temp[hours[result]];\r\n    };\r\n    DataHelper.getDisplayHour = function (offset) {\r\n        var displayHour = new Date().getHours() + offset;\r\n        if (displayHour > 23) {\r\n            return displayHour - 24 + ':00';\r\n        }\r\n        return displayHour + ':00';\r\n    };\r\n    DataHelper.getImageArray = function (htmlStr) {\r\n        var node = document.createElement('div');\r\n        node.innerHTML = htmlStr;\r\n        var nodeList = node.querySelectorAll('img');\r\n        var result = [];\r\n        nodeList.forEach(function (el) {\r\n            result.push(el.src);\r\n        });\r\n        return result.filter(function (x) { return x.includes(_constant_common_constant__WEBPACK_IMPORTED_MODULE_0__/* .BASE_CLOUD_URL */ .W1); });\r\n    };\r\n    DataHelper.generateInsertAndDeleteArr = function (entity, original) {\r\n        var originalArr = this.getImageArray(original);\r\n        var entityArr = this.getImageArray(entity);\r\n        var imageNormalDelete = [];\r\n        var imageNormalAdd = [];\r\n        originalArr.forEach(function (element) {\r\n            var img = entityArr.find(function (x) { return x === element; });\r\n            if (!img) {\r\n                imageNormalDelete.push(element);\r\n            }\r\n        });\r\n        entityArr.forEach(function (element) {\r\n            var img = originalArr.find(function (x) { return x === element; });\r\n            if (!img) {\r\n                imageNormalAdd.push(element);\r\n            }\r\n        });\r\n        return { imageNormalDelete: imageNormalDelete, imageNormalAdd: imageNormalAdd };\r\n    };\r\n    DataHelper.create_UUID = function () {\r\n        var dt = new Date().getTime();\r\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = (dt + Math.random() * 16) % 16 | 0;\r\n            dt = Math.floor(dt / 16);\r\n            return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n        });\r\n        return uuid;\r\n    };\r\n    return DataHelper;\r\n}());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1166\n")}}]);